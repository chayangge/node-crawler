<!DOCTYPE html><html><head><meta charset="utf-8"><meta name="X-UA-Compatible" content="IE=edge"><title> 插秧哥's Blog</title><meta name="description" content="Never Stop Learning"><meta name="viewport" content="width=device-width, initial-scale=1"><link rel="icon" href="/favicon.png"><link rel="stylesheet" href="/css/apollo.css"><link rel="search" type="application/opensearchdescription+xml" href="http://chayangge.com/atom.xml" title="插秧哥's Blog"></head><body><div class="wrap"><header><a href="/" class="logo-link"><img src="/favicon.png" alt="logo"></a><ul class="nav nav-list"><li class="nav-list-item"><a href="/" target="_self" class="nav-list-link active">BLOG</a></li><li class="nav-list-item"><a href="/archives/" target="_self" class="nav-list-link">ARCHIVE</a></li><li class="nav-list-item"><a href="https://github.com/chayangge" target="_blank" class="nav-list-link">GITHUB</a></li><li class="nav-list-item"><a href="/atom.xml" target="_self" class="nav-list-link">RSS</a></li></ul></header><main class="container"><ul class="home post-list"><li class="post-list-item"><article class="post-block"><h2 class="post-title"><a href="/2017/03/16/node连上数据库/" class="post-title-link">node与mysql</a></h2><div class="post-info">Mar 16, 2017</div><div class="post-content"><p>一直以来都在混迹于『前端』，虽然使用node服务器，但也是用node请求java核心接口，node后台接口只做一些边边角角的逻辑，如上传，图片识别等第三放SDK，所以node对数据库的直接操作经验为零，连sql语句都忘得差不多了，这次就做了个小demo，破除一下对未知的神秘感，<a href="https://github.com/chayangge/node-express-mysql">源码在这</a>。<br></div><a href="/2017/03/16/node连上数据库/" class="read-more">...more</a></article></li><li class="post-list-item"><article class="post-block"><h2 class="post-title"><a href="/2017/03/08/从Object.prototype角度看js原型/" class="post-title-link">从Object.prototype角度看js原型</a></h2><div class="post-info">Mar 8, 2017</div><div class="post-content"><p>js原型是该语言的核心本质，可以说，没理解js原型就没学会js，js中的各个对象通过原型链的层层引用实现了各种方法的继承。其中关系错综复杂，我们先从这些原型链的『根』开始：<br></div><a href="/2017/03/08/从Object.prototype角度看js原型/" class="read-more">...more</a></article></li><li class="post-list-item"><article class="post-block"><h2 class="post-title"><a href="/2017/03/02/关于博客/" class="post-title-link">关于博客</a></h2><div class="post-info">Mar 2, 2017</div><div class="post-content"><p>我从2014年开始写博客，到现在勉强快3年了，而真正意义上的持续写博客，主要还是后两年。现在看最开始写的文章，简直弱爆了，写的技术也很肤浅，虽然现在也不怎么深。我现在依然清晰的记得：2014年，躁动的我逼着自己写下了第一篇博客，并说要继续坚持，要习惯和键盘啪啪。那时候，脑子空洞，语言生涩——根本写不出来，就像做恶梦：想喊张不开嘴，想跑迈不开腿。<br></div><a href="/2017/03/02/关于博客/" class="read-more">...more</a></article></li><li class="post-list-item"><article class="post-block"><h2 class="post-title"><a href="/2017/01/24/瞬间爱上命令行：代码提交脚本/" class="post-title-link">瞬间爱上命令行：代码提交脚本</a></h2><div class="post-info">Jan 24, 2017</div><div class="post-content"><p>使用git的提交代码时，步骤繁琐：先add，后commit，再push：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">git status</div><div class="line">git add .</div><div class="line">git commit -a -m &quot;备注&quot;</div><div class="line">git push</div></pre></td></tr></table></figure></p>
<p>完全可以用一个脚本减少这些重复操：<br></div><a href="/2017/01/24/瞬间爱上命令行：代码提交脚本/" class="read-more">...more</a></article></li><li class="post-list-item"><article class="post-block"><h2 class="post-title"><a href="/2017/01/16/js算法基础/" class="post-title-link">js算法基础</a></h2><div class="post-info">Jan 16, 2017</div><div class="post-content"><h2 id="u53D8_u91CF_u63D0_u5347"><a href="#u53D8_u91CF_u63D0_u5347" class="headerlink" title="变量提升"></a>变量提升</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">console</span>.log(a); <span class="comment">// function a</span></div><div class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  <span class="built_in">console</span>.log(<span class="string">"变量提升"</span>)</div><div class="line">&#125;</div><div class="line"><span class="built_in">console</span>.log(a); <span class="comment">// 10</span></div></pre></td></tr></table></figure></div><a href="/2017/01/16/js算法基础/" class="read-more">...more</a></article></li><li class="post-list-item"><article class="post-block"><h2 class="post-title"><a href="/2017/01/12/瞬间爱上命令行/" class="post-title-link">瞬间爱上命令行</a></h2><div class="post-info">Jan 12, 2017</div><div class="post-content"><p>前端其实命令行用的并不多，无非cd cat vi ，连mkdir都很少用到，也就一直没怎么注意过shell，听说程序员会为了省去2小时的麻烦而花4小时写个脚本，只是当个段子听听，完全体会不到背后的乐趣，可今天的一个事，让我彻底爱上命令行。<br></div><a href="/2017/01/12/瞬间爱上命令行/" class="read-more">...more</a></article></li><li class="post-list-item"><article class="post-block"><h2 class="post-title"><a href="/2017/01/05/sublime自定义快捷键/" class="post-title-link">sublime自定义快捷键</a></h2><div class="post-info">Jan 5, 2017</div><div class="post-content"><p>一直用的sublime3，但其默认没有删除整行快捷键，平时一直用，虽然麻烦，但也习惯了，最近搞新东西，来回注释了很多代码，这才想起：该配置一个删除整行的快捷键了。<br></div><a href="/2017/01/05/sublime自定义快捷键/" class="read-more">...more</a></article></li><li class="post-list-item"><article class="post-block"><h2 class="post-title"><a href="/2016/12/23/公钥免密码ssh登录阿里云服务器/" class="post-title-link">公钥免密码ssh登录阿里云服务器</a></h2><div class="post-info">Dec 23, 2016</div><div class="post-content"><p>从终端ssh登录阿里云服务器每次都要输入服务器ip后再输密码，很麻烦：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ssh root@101.201.XX.XX</div><div class="line">root@101.201.XX.XX&apos;s password: // 再输入密码</div></pre></td></tr></table></figure></p>
<p>登陆一次还有时间限制，过会没动静就掉线了，一天来回要登录好几次。<br></div><a href="/2016/12/23/公钥免密码ssh登录阿里云服务器/" class="read-more">...more</a></article></li><li class="post-list-item"><article class="post-block"><h2 class="post-title"><a href="/2016/12/19/在阿里云上部署node/" class="post-title-link">在阿里云上部署node</a></h2><div class="post-info">Dec 19, 2016</div><div class="post-content"></div><a href="/2016/12/19/在阿里云上部署node/" class="read-more">...more</a></article></li><li class="post-list-item"><article class="post-block"><h2 class="post-title"><a href="/2016/12/16/制作自己的IconFont/" class="post-title-link">制作自己的IconFont</a></h2><div class="post-info">Dec 16, 2016</div><div class="post-content"><p>IconFont已经广为熟知了，与图片相比其优势自然不言而喻，下面就是简单介绍一下其制作过程：</p>
<h2 id="u6240_u7528_u5DE5_u5177fontLab"><a href="#u6240_u7528_u5DE5_u5177fontLab" class="headerlink" title="所用工具fontLab"></a>所用工具fontLab</h2><p><img src="http://7xprui.com1.z0.glb.clouddn.com/icon5.png" alt="fontLab"><br></div><a href="/2016/12/16/制作自己的IconFont/" class="read-more">...more</a></article></li></ul></main><footer><div class="paginator"><a href="/page/2/" class="next">NEXT</a></div><div class="copyright"><p>© 2014 - 2017 <a href="http://chayangge.com">插秧哥</a>, powered by <a href="https://hexo.io/" target="_blank">Hexo</a> and <a href="https://github.com/pinggod/hexo-theme-apollo" target="_blank">hexo-theme-apollo</a>.</p></div></footer></div><script async src="//cdn.bootcss.com/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML" integrity="sha384-crwIf/BuaWM9rM65iM+dWFldgQ1Un8jWZMuh3puxb8TOY9+linwLoI7ZHZT+aekW" crossorigin="anonymous"></script></body></html>